CREATE TABLE IF NOT EXISTS USERS (
                                     USER_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
                                     USER_NAME VARCHAR(40),
                                     USER_LOGIN VARCHAR(40) NOT NULL,
                                     USER_EMAIL VARCHAR(40) NOT NULL,
                                     USER_BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS FILMS (
                                     FILM_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
                                     FILM_NAME VARCHAR(40) NOT NULL,
                                     FILM_DESCRIPTION VARCHAR(200),
                                     FILM_MPA_ID INTEGER,
                                     RELEASE_DATE DATE,
                                     FILM_DURATION INT
);

CREATE TABLE  IF NOT EXISTS MPA_RATINGS (
                                            RATING_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
                                            RATING_DESC VARCHAR(20)
);

CREATE TABLE  IF NOT EXISTS GENRES (
                                       GENRE_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
                                       GENRE_DESC VARCHAR(20)
);

CREATE TABLE  IF NOT EXISTS FILM_GENRE (
                                           GENRE_ID INT NOT NULL ,
                                           FILM_ID BIGINT NOT NULL

);

CREATE TABLE  IF NOT EXISTS FRIENDS (
                                        USER_ID BIGINT NOT NULL ,
                                        FRIEND_ID BIGINT NOT NULL ,
                                        STATUS_ID INTEGER NOT NULL,
                                        CONSTRAINT IF NOT EXISTS PKFRIENDS PRIMARY KEY(USER_ID, FRIEND_ID)
);

CREATE TABLE IF NOT EXISTS FILM_LIKES (
                                          USER_ID BIGINT NOT NULL ,
                                          FILM_ID BIGINT NOT NULL,
                                          CONSTRAINT IF NOT EXISTS PKLIKES PRIMARY KEY(USER_ID, FILM_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS_STATUS (
                                              STATUS_ID INTEGER PRIMARY KEY,
                                              STATUS_DESC VARCHAR(20)
);

ALTER TABLE FILMS ADD FOREIGN KEY (FILM_MPA_ID) REFERENCES MPA_RATINGS (RATING_ID) ON DELETE RESTRICT;

ALTER TABLE FILM_GENRE ADD CONSTRAINT IF NOT EXISTS FGKEY PRIMARY KEY  (FILM_ID, GENRE_ID);

ALTER TABLE FILM_GENRE ADD FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID) ON DELETE RESTRICT;

ALTER TABLE FILM_GENRE ADD FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE;

ALTER TABLE FRIENDS ADD FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE;

ALTER TABLE FRIENDS ADD FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE;

ALTER TABLE FILM_LIKES ADD FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE;

ALTER TABLE FILM_LIKES ADD FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE;

ALTER TABLE FRIENDS ADD FOREIGN KEY (STATUS_ID) REFERENCES FRIENDS_STATUS (STATUS_ID) ON DELETE RESTRICT;


